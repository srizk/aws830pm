EC2 : Elastic 	Compute 					Cloud 
		vCPU, Memory, Storage, Network

server = Box = Instance = VMWare = Azure VM = GCP Engine
Terminate = Delete

On-Demand EC2 Instance : No specific workload / usecases.. Shortterm usage.. 
	Pricing : /Sec Basis (Min 60 Sec).. /hr basis.. 

Reserved ec2 instances (RI) : Stable workloads.. Longterm usage.. Contract 1 Yr / 3 yrs..

	Standard RI : We cannot change the configuration.. 
	Convertable RI : We can change the configuration.. 
	Scheduled RI : repeated durations

	Pricing :	Full Upfront : Pay 100% and get your instance..
			Partial upfront : Need to 30-60%.. reduce instance hrly price.. 
					   With reduced price, need to pay monthly basis
			No Upfront : Pay everything monthly basis..


Spot Instances : Flexible start/stop for our instance.. We need to BID the Pricing against AWS pricing.. 
--> We can get high configured servers at low cost..
--> Spot fleet request (Max Pricing)
--> Pricing history

==> You bid 0.50$/hr..  after 1 hr 30 Min.. 
	--> Price not increase, you terminated insatnce : 1 hr 30 Min.. : 1$
	--> Price increased by AWS, AWS Terminated insatnce : 1 hr : 0.50$

FreeTier : 750 Hours per month, t2.micro (1 vCPU, 1 RAM) , WIndows instance.. 
	750 Hours per month, t2.micro (1 vCPU, 1 RAM) , Linux instance..


AWS Marketplace : Where can buy/sell our customized appliations.. 


Instance isolation diagram
--> Tenancy:
	--> Shared tenancy / Default tenancy
	--> Dedicated tenancy : Underlying h/w will not share with any other aws cust.
		--> Dedicated instance : Small COnfig..
		--> Dedicated Host : High config to run multiple instances, More 		transparancy on CPU core level.. we can apply CPU level licenses also

_____________________________________________________________________________________

D: 04/06/2020

Choose two regions to perform all the tasks/activities..!!
--> Mumbai
--> NV		(billing region - 6 AZs)

How to Launch a Windows ec2 instance.!! 

Step 1 : Choose an AMI (Amazon Machine Image)  : Windows Server 2016 

An AMI is a template that contains the software configuration (operating system, application server, and applications) required to launch your instance.

Step 2 : Choose the instance configuration (vCPU, Memory, Network Performance)

General purpose : Stable performance 	: t2, t3, m4, m5
Compute optimized : More CPU power 	: c4, c5, c5d, c5n
GPU Instance : Graphic performance	: P2, g4dn
Memory Optimized : More RAM perf	: r4, r5, r5d, r5ad
Storag oprimized : Best Disk perf	: d2, i2, i3
FPGA : Field programable gateway array: f1
ML ASIC : inf1

t2.micro (1 vCPU, 1 RAM) : Free Tier Eligible.. 

c5.large	: 
c5.2xlarge	: 
m5.xlarge	: 


Step 3: Configure Instance Details

No of Instance : 1
Shutdown behavior : STOP  / TERMINATE	: STOP
	What will happen when we shutdown instance from OS level : 
Enable termination protection : YES  (Secure from Accidental terminations)

Step 4: Add Storage : 30GB 

Step 5: Add Tags 
	--> max 50 tags/ instance

Step 6: Configure Security Group

Protocols to perform specific operations/ Every protocol uses a port number.. 

Windows : RDP (Remote desktop protocol) : 3389
Linux : SSH (Secure Shell) : 22
http: 80
https : 443
Mssql : 1433
mysql : 3306

RDP : TCP : 3389 : 0.0.0.0/0 ==> Everyone / anywhere

Step 7: Review Instance Launch with a KeyPair.

KeyPair : Works with Public Key and private Key mechanism (Encryption and Descryption).. 

Public Key = AWS Holds and it stores in the ec2 instance
Private Key = Given to us.. We need to browse this Privatekey against our ec2 instance to 		get the default password. (.pem format)


Public IP: Unique across the globe.. 

We need an application : RDP tool: WIndows OS defaultly avialble. 

Open "RUN" --> MSTSC (MicroSoft Terminal Services CLient) --> enter


Task 1 : Launch a WIndows ec2 instance and login with Keypair provided password.
--> Now change the "Administrator" password, close the session.. Try to login Using the keypair generated password..   Able to login with kP pwd or custom pwd..??

Task 2 : Crete another user "yourname", provide valid "Local Admin Rights" and "Remote connectivity" permissions and try to login as that user to ec2 instance. 

Task 3: Try to make your instance as webserver..!!



https://join.slack.com/t/awswithavinash/shared_invite/zt-ee98fole-ThLu2xoWAVtUhhvoQPl~bA


Coupons Code: JUNEAVI

Linux : 
https://www.udemy.com/course/linuxwithavinash/?couponCode=JUNEAVI

Jenkins
https://www.udemy.com/course/jenkinswithavinash/?couponCode=JUNEAVI

GIT : 
https://www.udemy.com/course/gitbyavinash/?couponCode=JUNEAVI


______________________________________________________________________________________

D: 05/06/2020

Windows Instance : RDP : 3389

--> Using Security Groups, we cannot deny the traffic. Only we can allow.

Source : 
MYIP : CUrrently connected network users can connect to this instance.!
Custom : We can provide the network IP addreses.
Anywhere : You can connect to instance from anywhere. 

ssh : MyIP/Custom
RDP : MyIP/Custom

http: 80 : 0.0.0.0/0
https: 443 : 0.0.0.0/0

NACLs : VPC : using NACLs we can deny the traffic..


after installing IIS, We will get a folder C:\inetpub\wwwroot\ place all your webpages.

We need to verify the Security Groups..!!!!
webserver : uses http and https protocol to websites..

Inbound : Whatever the traffic you want to deliver from your ec2 instance... 
Outbound : Whatever the traffic you want to access within ec2 instance.. 

--> changes to the SG takes effect immediately. 
--> Security groups are stateful, We need to takes care about the inbound rules only. 


How to connect to a Linux Instance..??

Step 1: Choose an Amazon Machine Image (AMI) : Amazon Linux 2 AMI 

Centos, RedHat = Amazon Linux 2..!!


Windows : Putty :
Putty Dont support .PEM format keypairs, Putty .ppk format..  

Amazon Linux : ec2-user
redhat : redhat / ec2-user
ubuntu : ubuntu


Terminal / cmd : ssh -i keypair.pem ec2-user@publicip

If we want to use windows command prompt to connect Linux instances, we need to install Openssh in our windows.. 


Task : Launch a windows instance, make it as a webserver and deliver the custom webpage. (try to explore SG Source options)

Task 2 : Launch a Linux ec2 instance, and connect using local command prompt / GIT.

Convert the .PEM file to .ppk file using PuttyGen and try to connect to same linux instance using putty application.. 

Task 3 : try "MobaXterm" application.

______________________________________________________________________________________

D: 06/06/2020

==> Add Storage

For root volume: gp2, io1, magnetic.. 
Additional volumes: sc1, st1


HDD/SDD perf we measure with IOPS : Input and Output per second.. 

general Purpose SSD: gp2 : Balance for price and performance, Most commonly used.. Boot VOlumes, apps/dev/test... Min: 1 Gb, Max: 16 TB... Max IOPS : 16,000.. But if we need more than 10k, we don't use this.. 
Default ratio : 1 GB = 3 IOPS.. Min of 100.. 

Provisioned IOPS SSD : io1 : Highest perf SSD.. Prod environment.. I/O intensive databases / relationsal database if you want to run from ec2 instance.. IOPS: 32,00 for all regular instances..  For Nitro instances Max: 64,000.. Min: 4 gb, Max: 16 TB.. 
Default ratio : 1 GB = 50 IOPS.. But we can choose/sepcify required IOPS count.. 

Magnetic : standard : Lowest perf, lowest cost.. For less freq accessed server.. IOPS N/A.. Min: 1 GB, Max: 1 TB... 

root = OS runs in this Volume.. 

Throughput oprimized HDD : st1 : Designed for Freq acceesed, throughput intensive applications.. (BigData, Data warehousing, Log processing).. Min: 500 GB, Max: 16 TB..

Cold HDD : sc1 : Designed for Less Freq acceesed, Lowest cost.. Min: 500 GB, Max: 16 TB..
Colder data which required only fewer scans per day.. 


--> Whenever we create and associate a volume to ec2 instance, Volume creates with RAW partition.. 

WIndows : fat, fat32, ntfs, ReFS.. 
Linux: ext3, ext4, xfs.. 


Snapshots: Snapshots are backup copies of our EBS volumes.. These backup copies allow us to create a volume in any AZ in same region...
--> AWS uses "AWS Owned s3" platform to store these snapshots. 

==> We can create a copy and associate to another AZ instance.
==> We can copy the snapshot to another region also.
==> We can share this snapshot to another AWS account.
==> We can even make it public.. 


Task : Launch an ec2 instance "ap-south-1a" with 30 gb, Increase that 30 gb to 31 gb and make it available..

Task 2 : Create a new volume in "ap-south-1a" , and associate and make it avilable.

Task 3 : launch an ec2 instance in "ap-south-1b".. Get the task 2 volume copy to this instance using snapshot mechanism.


  













